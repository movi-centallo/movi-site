---



import Event from "../components/event.astro";
import { contentfulClient } from "../lib/contentful";
import type Eventi from "../lib/types.ts";

const { entries, homepage } = Astro.props;

console.log("Entries:", JSON.stringify(entries, null, 2));


/*
{events &&
    <Sectionhead>
      <Fragment slot="title">Eventi</Fragment>
      <Fragment slot="desc">Prossimamente</Fragment>
    </Sectionhead>
   }
    {events.items.map((item) => (
        
      <Event entry={item} />
    ))}
*/
---
    
      <ul class={`grid gap-16 max-w-4xl${homepage ? '' : ' mx-auto'}`}>
        {
          entries.map((blogPostEntry, index) => {
        // Contentful image handling
        const imageUrl = blogPostEntry.fields.image?.fields?.file?.url 
          ? `https:${blogPostEntry.fields.image.fields.file.url}`
          : '/img/default-image.jpg'; // fallback image
        
        const imageAlt = blogPostEntry.fields.image?.fields?.title 
          || blogPostEntry.fields.image?.fields?.description 
          || blogPostEntry.fields.title;

        return (
          <li>
            <a href={`/progetti/${blogPostEntry.fields.slug}`}>
          <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
            <img
              src={imageUrl + '?w=600&h=400&fit=fill&q=75&fm=webp'}
              alt={imageAlt}
              sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 600px"
              width={600}
              height={400}
              loading="eager"
              decoding="sync"
              class="w-full rounded-md object-cover object-center bg-white"
            />
            <div>
              <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
            {blogPostEntry.fields.category}
              </span>

              <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 ">
            {blogPostEntry.fields.title}
              </h2>

              <div class="flex gap-2 mt-3">
            <time
              class="text-gray-400"
              datetime={blogPostEntry.fields.publishDate}>
                {new Date(blogPostEntry.fields.publishDate).toLocaleDateString('it-IT', {
                day: 'numeric',
                month: 'long',
                year: 'numeric'
                })}
            </time>
              </div>
            </div>
          </div>
            </a>
          </li>
        );
          })
        }
       